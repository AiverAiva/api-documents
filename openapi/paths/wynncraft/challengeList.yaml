get:
  tags:
    - Wynncraft
  summary: Get the available dungeons and raids list.
  description: |
    yes
  operationId: challengeList
  parameters:
    - in: query
      name: detailed
      required: false
      schema:
        type: boolean
      description: "**Optional** if you want to seperated dungeons and raids into two parts, please specific this to true"
  responses:
    "200":
      description: Successful response with player profile card image.
      content:
        application/json:
          schema:
            type: string
            format: binary
          examples:
            detailed_true:
              summary: Response when detailed is true
              value:
                {"dungeons": ["Decrepit Sewers", "Infested Pit", "Lost Sanctuary", "Underworld Crypt", "Sand-Swept Tomb", "Ice Barrows", "Undergrowth Ruins", "Galleon's Graveyard", "Fallen Factory", "Eldritch Outlook", "Corrupted Decrepit Sewers", "Corrupted Infested Pit", "Corrupted Lost Sanctuary", "Corrupted Underworld Crypt", "Corrupted Sand-Swept Tomb", "Corrupted Ice Barrows", "Corrupted Undergrowth Ruins", "Corrupted Galleon's Graveyard"],
                "raids": ["Nest of the Grootslangs", "Orphion's Nexus of Light", "The Canyon Colossus", "The Nameless Anomaly"]}
            defailed_false:
              summary: Response when detailed is false
              value:
                [
                    "Decrepit Sewers", "Infested Pit", "Lost Sanctuary", "Underworld Crypt", "Sand-Swept Tomb", "Ice Barrows", "Undergrowth Ruins", "Galleon's Graveyard", "Fallen Factory", "Eldritch Outlook",
                    "Corrupted Decrepit Sewers", "Corrupted Infested Pit", "Corrupted Lost Sanctuary", "Corrupted Underworld Crypt", "Corrupted Sand-Swept Tomb", "Corrupted Ice Barrows", "Corrupted Undergrowth Ruins", "Corrupted Galleon's Graveyard", 
                    "Nest of the Grootslangs", "Orphion's Nexus of Light", "The Canyon Colossus", "The Nameless Anomaly"
                ]
    # content:
    #   application/json:
    #     schema:
    #       $ref: ../components/schemas/User.yaml
    #     example:
    #       username: user1
    #       email: user@example.com
    # '403':
    #   description: Forbidden
    #   $ref: ../components/responses/Problem.yaml
    # '404':
    #   description: User not found
    #   $ref: ../components/responses/Problem.yaml

# put:
#   tags:
#     - User
#   summary: Updated user
#   description: This can only be done by the logged in user.
#   operationId: updateUser
#   parameters:
#     - name: username
#       in: path
#       description: The name that needs to be updated
#       required: true
#       schema:
#         type: string
# security:
#   - main_auth:
#       - write:users
# requestBody:
#   content:
#     application/json:
#       schema:
#         $ref: ../components/schemas/User.yaml
#     application/xml:
#       schema:
#         $ref: ../components/schemas/User.yaml
#   description: Updated user object
#   required: true
# responses:
#   '200':
#     description: OK
# '400':
#   description: Invalid user supplied
#   $ref: ../components/responses/Problem.yaml
# '404':
#   description: User not found
#   $ref: ../components/responses/Problem.yaml

